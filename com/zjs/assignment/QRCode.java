package com.zjs.assignment;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.zjs.toolbox.Toolbox;
import java.io.BufferedReader;
import java.io.FileReader;
import java.nio.file.FileSystems;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ZhouJingsen
 */
public class QRCode extends javax.swing.JPanel {
    public final int size=1;
    /**
     * Creates new form QRCode
     */
    public QRCode() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Choose Text File");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        JFileChooser jfc=new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TXT Files", "txt");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(getParent().getParent().getParent().getParent());
        if(returnVal != JFileChooser.APPROVE_OPTION)return;
        try{
            BufferedReader br=new BufferedReader(new FileReader(jfc.getSelectedFile()));
            String s=br.readLine();
            if(br.readLine()!=null)JOptionPane.showMessageDialog(getParent().getParent().getParent().getParent(),"Selected text file contains more than one row.\nOnly the first row will be read.", "Warning", JOptionPane.WARNING_MESSAGE);
            br.close();
            HashMap hm=new HashMap();
            BitMatrix bm=null;
            if(s.length()!=s.getBytes().length){
                String coding=JOptionPane.showInputDialog(getParent().getParent().getParent().getParent(),"Detected letter(s) that is(are) not ASCII letter(s),\nPlease input file coding type.", "Input file coding type", JOptionPane.QUESTION_MESSAGE);
                while(true){
                    if(coding==null)return;
                    hm.put(EncodeHintType.CHARACTER_SET, coding);
                    hm.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.Q);
                    try{
                        bm=new MultiFormatWriter().encode(s, BarcodeFormat.QR_CODE, 500, 500,hm);
                    }catch(Exception e){
                        int ch=JOptionPane.showConfirmDialog(getParent().getParent().getParent().getParent(), "Unsupported coding:"+coding+".\nTry again?", "Unsupported coding", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                        if(ch==JOptionPane.NO_OPTION||ch==JOptionPane.CLOSED_OPTION)return;
                        coding=JOptionPane.showInputDialog(getParent().getParent().getParent().getParent(),"Please input file coding type.", "Input file coding type", JOptionPane.QUESTION_MESSAGE);
                        if(coding==null)return;
                        if(ch==JOptionPane.YES_OPTION)continue;
                    }
                    break;
                }
            }else{
                bm=new MultiFormatWriter().encode(s, BarcodeFormat.QR_CODE, 500, 500);
            }
            MatrixToImageWriter.writeToPath(bm, "JPG", FileSystems.getDefault().getPath("D:\\output.jpg"));
            Runtime.getRuntime().exec("explorer.exe D:\\output.jpg");
        }catch(Exception e){
            Toolbox.ExceptionHandler(e);
        }
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
